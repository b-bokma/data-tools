AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Quicksight
  Sample SAM Template for Quicksight

# Global Variables. Used by default for all functionalities
Globals:
  Function:
    Timeout: 120
    Runtime: python3.8
    Environment:
      Variables:
        CHARGEBEE_DB_NAME: !Ref ChargebeeGlueDB

# Under resources all functions and features are placed

Resources:

# Orchestration
  ChargebeeDownloadState:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: state_machines/chargebeeDownload.asl.json
      DefinitionSubstitutions:
        DownloadChargebeeSubscriptionsArn: !GetAtt DownloadChargebeeSubscriptions.Arn
        DownloadChargebeeInvoicesArn: !GetAtt DownloadChargebeeInvoices.Arn
        DownloadChargebeeCustomersArn: !GetAtt DownloadChargebeeCustomers.Arn
        DownloadExchangeRatesArn: !GetAtt DownloadExchangeRates.Arn
        ExtractChargebeeSubscriptionsArn: !GetAtt ExtractChargebeeSubscriptions.Arn
        ExtractChargebeeCustomersArn: !GetAtt ExtractChargebeeCustomers.Arn
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - AWSGlueConsoleFullAccess
        - AmazonAthenaFullAccess

  ChargebeeMonthlyState:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: state_machines/chargebeeMonthly.asl.json
      DefinitionSubstitutions:
        ChargebeeMonthlyTablesArn: !GetAtt ChargebeeMonthlyTables.Arn
        ChargebeeMonthlyProcessedArn: !GetAtt ChargebeeMonthlyProcessed.Arn
        ChargebeeMonthlyCrawler: !Ref ChargebeeMonthlyCrawler
        TriggerGlueCrawler: !Ref TriggerGlueCrawler
        TriggerGlueCrawlerArn: !GetAtt TriggerGlueCrawler.Arn
        CheckGlueCrawlerArn: !GetAtt CheckGlueCrawler.Arn
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - AWSGlueConsoleFullAccess
        - AmazonAthenaFullAccess

  ChargebeeLatestState:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: state_machines/chargebeeLatest.asl.json
      DefinitionSubstitutions:
        ChargebeeLatestTablesArn: !GetAtt ChargebeeLatestTables.Arn
        ChargebeeLatestCrawler: !Ref ChargebeeLatestCrawler
        TriggerGlueCrawler: !Ref TriggerGlueCrawler
        TriggerGlueCrawlerArn: !GetAtt TriggerGlueCrawler.Arn
        CheckGlueCrawlerArn: !GetAtt CheckGlueCrawler.Arn
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - AWSGlueConsoleFullAccess
        - AmazonAthenaFullAccess

  ExchangeRatesState:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: state_machines/currencylayerDownload.asl.json
      DefinitionSubstitutions:
        DownloadExchangeRatesArn: !GetAtt DownloadExchangeRates.Arn
        ExtractExchangeRatesArn: !GetAtt ExtractExchangeRates.Arn
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess

  StepfunctionInvoke:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: invoke_stepfunction.lambda_handler
      MemorySize: 128
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          STEPFUNCTIONARN: !GetAtt ChargebeeDownloadState.Arn
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            Schedule: cron(0 6 * * ? *)

  TriggerGlueCrawler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/utils
      Handler: initiate_glue_crawler.lambda_handler
      MemorySize: 128
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonAthenaFullAccess
        - AWSGlueConsoleFullAccess
      Layers:
        - !Ref Layer

  CheckGlueCrawler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/utils
      Handler: check_glue_crawler.lambda_handler
      MemorySize: 128
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - AWSGlueConsoleFullAccess
      Layers:
        - !Ref Layer

  Layer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: QuicksightLayer
      Description: Layer to include all libraries in one go
      ContentUri: layer/
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8

# Landing: Storing initial data on S3
  Landing:
    Type: AWS::S3::Bucket

  DownloadChargebeeSubscriptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/landing/chargebee
      Handler: subscriptions.lambda_handler
      MemorySize: 512
      Timeout: 180
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          BUCKETNAME: !Ref Landing

  DownloadExchangeRates:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/landing/currencylayer
      Handler: exchange_rates.lambda_handler
      MemorySize: 128
      Timeout: 59
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          TARGET_BUCKETNAME: !Ref Landing


  DownloadChargebeeInvoices:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/landing/chargebee
      Handler: invoices.lambda_handler
      MemorySize: 512
      Timeout: 180
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          BUCKETNAME: !Ref Landing

  DownloadChargebeeCustomers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/landing/chargebee
      Handler: customers.lambda_handler
      MemorySize: 512
      Timeout: 180
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          BUCKETNAME: !Ref Landing

#extract: Extracting data from landing and moving it to a new bucket. Initial processing happens here
  Raw:
    Type: AWS::S3::Bucket

  ExtractChargebeeSubscriptions:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/extract/chargebee
      Handler: subscriptions_processing.lambda_handler
      MemorySize: 512
      Timeout: 180
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          SOURCE_BUCKETNAME: !Ref Landing
          TARGET_BUCKETNAME: !Ref Raw

  ExtractChargebeeCustomers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/extract/chargebee
      Handler: customers_processing.lambda_handler
      MemorySize: 512
      Timeout: 180
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          SOURCE_BUCKETNAME: !Ref Landing
          TARGET_BUCKETNAME: !Ref Raw

  ExtractExchangeRates:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/extract/currencylayer
      Handler: exchange_rates.lambda_handler
      MemorySize: 128
      Timeout: 59
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          SOURCE_BUCKETNAME: !Ref Landing
          TARGET_BUCKETNAME: !Ref Raw

# Processed
  Processed:
    Type: AWS::S3::Bucket

  ChargebeeLatestTables:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/transform/chargebee
      Handler: latest.lambda_handler
      MemorySize: 512
      Timeout: 59
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          SOURCE_BUCKETNAME: !Ref Raw
          TARGET_BUCKETNAME: !Ref Processed

  ChargebeeMonthlyTables:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/transform/chargebee
      Handler: monthly.lambda_handler
      MemorySize: 512
      Timeout: 59
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          LANDING_BUCKETNAME: !Ref Landing
          SOURCE_BUCKETNAME: !Ref Raw
          TARGET_BUCKETNAME: !Ref Processed

  ChargebeeMonthlyProcessed:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/transform/chargebee
      Handler: monthly_processed.lambda_handler
      MemorySize: 512
      Timeout: 59
      Policies:
        - AWSStepFunctionsFullAccess
        - AWSLambdaRole
        - CloudWatchFullAccess
        - SecretsManagerReadWrite
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
      Layers:
        - !Ref Layer
      Environment:
        Variables:
          SOURCE_BUCKETNAME: !Ref Processed
          TARGET_BUCKETNAME: !Ref Processed

  ChargebeeGlueDB:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: quicksight

  ChargebeeMonthlyCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      DatabaseName: !Ref ChargebeeGlueDB
      Role: !Ref CrawlerRole
      TablePrefix : "monthly_"
      Targets:
        S3Targets:
          - Path:
              "Fn::Join": ["",[{ "Ref": "Processed" },"/monthly/processed/" ]]
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"

  ChargebeeLatestCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      DatabaseName: !Ref ChargebeeGlueDB
      Role: !Ref CrawlerRole
      TablePrefix : "latest_"
      Targets:
        S3Targets:
          - Path:
              "Fn::Join": [ "",[{ "Ref": "Processed" },"/latest/chargebee/" ] ]
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"

  CrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GlueCrawlerRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      "Policies": [
        {
          "PolicyName": "root",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": "*",
                "Resource": "*"
              }
            ]
          }
        }
      ]

# analytics and reporting