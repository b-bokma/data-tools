{
  "Comment": "A step function State machine that downloads data from quicksight, stores it on S3, creates a table via Glue, creates a view on athena and loads that into quicksight",
  "StartAt": "Pass",
  "States": {
    "Pass": {
      "Comment": "A Pass state passes its input to its output, without performing work. Can easily check the payload with this",
      "Type": "Pass",
      "ResultPath": null,
      "Next": "MonthlyTables"
    },
    "MonthlyTables": {
      "Comment": "Task that processed chargebee data into monthly reporting tables",
      "Type": "Task",
      "Resource": "${ChargebeeMonthlyTablesArn}",
      "Next": "MonthlyProcessed"
    },
    "MonthlyProcessed": {
      "Comment": "Process monthly data to include comparison with previous month",
      "Type": "Task",
      "Resource": "${ChargebeeMonthlyProcessedArn}",
      "Next": "TriggerGlueCrawler"
    },
    "TriggerGlueCrawler": {
      "Comment": "This starts the Glue Crawler",
      "Type":"Task",
      "Resource": "${TriggerGlueCrawlerArn}",
      "Parameters": {
        "Comment": "Checks if Glue Crawler is still running. Returns status. Needed for choice",
        "CrawlerName": "${ChargebeeMonthlyCrawler}"
      },
      "Next": "GlueCrawlerCheck"
    },
    "GlueCrawlerCheck": {
      "Comment": "Check if crawler is still running",
      "Type": "Task",
      "Resource": "${CheckGlueCrawlerArn}",
      "Parameters": {
        "Comment": "Checks if Glue Crawler is still running. Returns status. Needed for choice",
        "CrawlerName": "${ChargebeeMonthlyCrawler}"
      },
      "Next": "CrawlerChoice"
    },
    "CrawlerChoice": {
      "Comment": "If crawler is still running, wait 5 seconds and check again. Otherwise continue",
      "Type": "Choice",
      "InputPath": "$",
"Choices": [
        {
          "Variable": "$.State",
          "StringEquals": "\"STARTING\"",
          "Next": "wait_ten_seconds"
        },
        {
          "Variable": "$.State",
          "StringEquals": "\"RUNNING\"",
          "Next": "wait_ten_seconds"
        },
        {
          "Variable": "$.State",
          "StringEquals": "\"STOPPING\"",
          "Next": "wait_ten_seconds"
        }
      ],
      "Default": "End_of_process"
    },
    "wait_ten_seconds": {
      "Type": "Wait",
      "Seconds": 10,
      "Next": "GlueCrawlerCheck"
    },
    "End_of_process": {
      "Type": "Pass",
      "End": true
    }
  }
}

